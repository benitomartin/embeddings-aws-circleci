#################################
# --- Project Configuration --- #
#################################

[project]
name = "embeddings-aws-circleci"
version = "0.1.0"
description = "Automated Vector Database Management with CircleCI"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "boto3>=1.37.24",
    "langchain-community>=0.3.20",
    "langchain_milvus>=0.1.8",
    "langchain-openai>=0.3.11",
    "pypdf>=5.4.0",
    "pymilvus>=2.5.6",
]

[project.optional-dependencies]
dev = [
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "ruff>=0.11.2",
]

######################################
# --- Build System Configuration --- #
######################################

# Build system
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

######################################
# --- Linting & Formatting Tools --- #
######################################

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 105
indent-width = 4

# Assume Python 3.12
target-version = "py312"

# Whether to show an enumeration of all fixed lint violations
show-fixes = true

[tool.ruff.lint]
# Enable pycodestyle (`E`), Pyflakes (`F`), and import sorting (`I`)
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []


[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10


#########################
# --- Static Typing --- #
#########################

[tool.mypy]
files = "src, lambda_function, tests"
ignore_missing_imports = true

#########################
# --- Testing Tools --- #
#########################

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-ra -v -s"
